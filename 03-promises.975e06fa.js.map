{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACaC,KAAKC,SAAW,GAGpCC,EAAAX,GAASY,OAAOC,QAAQ,uBAAwCC,OAAfX,EAAS,QAAYW,OAANV,EAAM,MAC1E,CACAW,QAAS,MAILJ,EAAAX,GAASY,OAAOI,QAAQ,sBAAqCF,OAAfX,EAAS,QAAYW,OAANV,EAAM,MACzE,CACEW,QAAS,K,GAGNX,E,IAhDMa,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAOP,IANC,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALlB,MAAOsB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAElBC,EAAaH,EAAMI,MACnBC,EAAYJ,EAAKG,MACjBE,EAAcJ,EAAOE,MACtBG,EAAI,EAAGA,GAAKD,EAAaC,IAAI,CACpC,IAAMC,EAAOC,OAAON,GAAeM,OAAOJ,IAAcE,EAAI,GAC3D9B,EAAc8B,EAAGC,GAChBE,MAAK,SAAAC,G,IAAGjC,EAAQiC,EAARjC,SAAUC,EAAKgC,EAALhC,MACnBO,EAAAX,GAASY,OAAOC,QAAQ,uBAAwCC,OAAfX,EAAS,QAAYW,OAANV,EAAM,MACtE,CACAW,QAAS,K,IAGVsB,OAAM,SAAAD,G,IAAGjC,EAAQiC,EAARjC,SAAUC,EAAKgC,EAALhC,MAClBO,EAAAX,GAASY,OAAOI,QAAQ,sBAAuCF,OAAfX,EAAS,QAAYW,OAANV,EAAM,MACrE,CACAW,QAAS,K,IAIXK,EAAMG,cAAce,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// Notiflix.Notify.info('Cogito ergo sum');\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount}\n  } = event.currentTarget;\n     const delayValue = delay.value;\n     const stepValue = step.value;\n     const amountValue = amount.value\n for (let i = 1; i <= amountValue; i++){\n   const time = Number(delayValue) + (Number(stepValue) * (i - 1));\n    createPromise(i, time)\n    .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`,\n  {\n    timeout: 4000,\n  },);\n  })\n  .catch(({ position, delay }) => {   \n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`,\n  {\n    timeout: 4000,\n  },);\n  });\n  }\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`,\n  {\n    timeout: 4000,\n  },);\n      } else {\n        // Reject\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`,\n  {\n    timeout: 4000,\n  },);\n      }\n    }, delay);\n   })\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","setTimeout","Math","random","$parcel$interopDefault","Notify","success","concat","timeout","failure","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayValue","value","stepValue","amountValue","i","time","Number","then","param","catch","reset"],"version":3,"file":"03-promises.975e06fa.js.map"}